services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    command: npm run start:dev api-gateway
    env_file:
      - .env
      - ./apps/api-gateway/.env
    depends_on:
      - db
      - nats
      - events
      - tickets
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3000:3000
  events:
    build:
      context: .
      dockerfile: ./apps/events/Dockerfile
      target: development
    command: npm run start:dev events
    env_file:
      - .env
      - ./apps/events/.env
    depends_on:
      - db
      - nats
    volumes:
      - .:/app
      - /app/node_modules
  tickets:
    build:
      context: .
      dockerfile: ./apps/tickets/Dockerfile
      target: development
    command: npm run start:dev tickets
    env_file:
      - .env
      - ./apps/tickets/.env
    depends_on:
      - db
      - nats
    volumes:
      - .:/app
      - /app/node_modules
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
  nats:
    image: nats
    environment:
      - NATS_URL=nats://nats:4222
    ports:
      - 4222:4222
volumes:
  pgdata:
    driver: local